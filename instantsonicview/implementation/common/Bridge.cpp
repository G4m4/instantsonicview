/// @filename Bridge.cpp
/// @brief InstantSonicView Bridge
/// @author gm
/// @copyright gm 2014
///
/// This file is part of InstantSonicView
///
/// InstantSonicView is free software: you can redistribute it and/or modify
/// it under the terms of the GNU General Public License as published by
/// the Free Software Foundation, either version 3 of the License, or
/// (at your option) any later version.
///
/// InstantSonicView is distributed in the hope that it will be useful,
/// but WITHOUT ANY WARRANTY; without even the implied warranty of
/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
/// GNU General Public License for more details.
///
/// You should have received a copy of the GNU General Public License
/// along with InstantSonicView.  If not, see <http://www.gnu.org/licenses/>.


// This file is NOT generated by Juce (at least not after the first time),
// That's why we apply our coding style here

#include "instantsonicview/implementation/common/Bridge.h"

#include "instantsonicview/src/analyzer/features.h"

Bridge::Bridge()
    : juce::Thread("Instant Sonic View bridge"),
      data_(nullptr),
      data_length_(0),
      done_(false),
      features_value_(),
      analyzer_(48000.0f) {
  // Nothing to do here for now
}

Bridge::~Bridge() {
  // Nothing to do here for now
}

void Bridge::run() {
  if (threadShouldExit()) {
    return;
  }
  if (done_) {
    return;
  } else {
    const unsigned int kSubframesCount(analyzer_.Process(data_,
                                                         data_length_,
                                                         &features_value_[0]));
    INSTANTSONICVIEW_ASSERT(kSubframesCount
      < sizeof(features_value_) / instantsonicview::analyzer::kAvailableDescriptorsCount);
    done_ = true;
  }
}

void Bridge::FeedData(const float* const data, const unsigned int data_length) {
  data_ = data;
  data_length_ = data_length;
  done_ = false;
}

float Bridge::GetFeatureValue(const unsigned int feature_idx) const {
  return features_value_[feature_idx];
}
